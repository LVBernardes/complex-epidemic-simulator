[tool.poetry]
name = "complex-epidemic-simulator"
version = "0.1.0"
description = ""
authors = ["Liniplov <levb_28@hotmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
packages = [{ include = "complex_epidemic_simulator", from = "src" }]
repository = "https://github.com/LVBernardes/complex-epidemic-simulator.git"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.3"
numpy = "^1.23.2"
loguru = "^0.6.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
pytest-mock = "^3.8.2"
black = "^22.8.0"
isort = "^5.10.1"
coverage = { extras = ["toml"], version = "^6.4.4" }
mypy = "^0.971"
darglint = "^1.8.1"
flake8 = "^5.0.4"
flake8-annotations = "^2.9.1"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^22.8.23"
flake8-docstrings = "^1.6.0"
flake8-isort = "^4.2.0"
notebook = "^6.4.12"
ipympl = "^0.9.2"

[tool.poetry.scripts]
complex-epidemic-simulator = "complex_epidemic_simulator.console:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# "coverage" configuration section
[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["complex_epidemic_simulator"]

[tool.coverage.report]
show_missing = true
fail_under = 100

# "isort" configuration section
[tool.isort]
profile = "black"
src_paths = ["src", "test"]
skip_gitignore = true

# "black" configuration section
[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  )/
'''

# "pylint" configuration section
[tool.pylint.format]
max-line-length = "88"
